
#####################################################################
# EFFECT LIST
#####################################################################
# !!! Remember to add all new effects with a short description here !!!


#####################################################################
# EFFECTS
#####################################################################


lover_breakup_rivalry_chance_effect = {
	random = {
		chance = 1
		compare_modifier = {
			value = ai_vengefulness
			multiplier = 0.5
		}
		modifier = {
			add = 25
			scope:breaker = {
				any_secret = {
					secret_type = secret_lover
					NOT = { secret_target = scope:lover }
					is_known_by = scope:lover
				}
			}
		}
		modifier = {
			add = 20
			has_trait = paranoid
		}
		modifier = {
			add = 15
			has_trait = stubborn
		}

		scope:breaker = {
			every_consort = {
				limit = {
					NOT = { this = scope:lover }
					NOR = {
						has_relation_rival = scope:lover
						has_relation_friend = scope:lover
					}
				}
				add_to_list = other_lovers
			}
			every_relation = {
				type = lover
				limit = {
					NOT = { this = scope:lover }
					NOR = {
						has_relation_rival = scope:lover
						has_relation_friend = scope:lover
					}
				}
				add_to_list = other_lovers
			}
		}
		random_in_list = {
			list = other_lovers
			weight = {
				base = 1
				#More likely to pick another known Lover
				modifier = {
					add = 3
					has_relation_lover = scope:breaker
					save_temporary_scope_as = lover_check
					scope:breaker = {
						OR = {
							NOT = {
								any_secret = {
									secret_type = secret_lover
									secret_target = scope:lover_check
									NOT = { is_known_by = scope:lover }
								}
							}
							any_secret = {
								secret_type = secret_lover
								secret_target = scope:lover_check
								is_known_by = scope:lover
							}
						}
					}
				}
			}
			save_scope_as = other_lover
		}
	}
}


remove_lover_or_soulmate_relation_effect = {
	if = {
		limit = { has_relation_soulmate = $CHARACTER$ }
		remove_relation_soulmate = $CHARACTER$
	}
	else_if = {
		limit = { has_relation_lover = $CHARACTER$ }
		remove_relation_lover = $CHARACTER$
	}
}

lover_breakup_effect = {
	$BREAKER$ = {
		save_scope_as = breaker
	}
	$LOVER$ = {
		save_scope_as = lover
	}

	show_as_tooltip = {
		$BREAKER$ = {
			remove_lover_or_soulmate_relation_effect = { CHARACTER = $LOVER$ }
		}
		$LOVER$ = {
			add_opinion = {
				target = $BREAKER$
				modifier = lover_breakup_opinion
			}
		}
	}

	hidden_effect = {
		$LOVER$ = {
			if = {
				limit = {
					is_consort_of = $BREAKER$
				}
				trigger_event = lover.0202 #Spouse breakup
			}
			else_if = {
				limit = {
					opinion = {
						target = $BREAKER$
						value > 0
					}
				}
				trigger_event = lover.0201 #Normal
			}
			else = {
				trigger_event = lover.0203 #Relieved
			}
		}
	}
}